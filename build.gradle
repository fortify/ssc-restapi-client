plugins {
  id 'java'
  id 'idea'
  id ('org.openapi.generator') version('5.2.1')
  id 'maven-publish'
  id 'signing'
  id 'io.github.gradle-nexus.publish-plugin' version '1.0.0'
}

repositories {
  mavenCentral()
}

group = 'com.fortify'
version = '22.2'
description 'Fortify SSC REST API client'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

ext {
    modifiedSpecDir = "$buildDir/tmp"
    originalSpecDir = "src/swagger/spec.json"
    generatedCodeDir = "$buildDir/generatedCode"
}


dependencies {

  implementation "org.openapitools:openapi-generator-gradle-plugin:5.2.1"
  implementation 'com.squareup.okhttp3:okhttp:4.10.0'
  implementation 'com.squareup.okhttp3:logging-interceptor:4.10.0'
  implementation 'io.swagger:swagger-annotations:1.6.6'
  implementation 'com.google.code.gson:gson:2.10.1'
  implementation 'io.gsonfire:gson-fire:1.8.5'
  implementation("com.google.code.findbugs:jsr305:3.0.2")
  implementation("javax.annotation:javax.annotation-api:1.3.2")
  testImplementation 'junit:junit:4.12'
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives(sourcesJar) {
        type 'source'
    }
    archives(javadocJar) {
        type 'javadoc'
    }
}

task fixAndCopySwaggerSpec(type: Sync) {
    description 'Read spec-rest.json and remove « and » characters. Write modified file to task temporaryDir'
    into(modifiedSpecDir)
    from(originalSpecDir) {
        filteringCharset = "UTF-8"
        filter({ String s ->
            s.replaceAll(/[\u00ab\u00bb]/, "")    // [«»]
        })
    }
}

openApiGenerate {
    generatorName = "java"
    inputSpec = "$modifiedSpecDir/spec.json"
    apiPackage = "com.fortify.ssc.restclient.api"
    invokerPackage = "com.fortify.ssc.restclient"
    outputDir = generatedCodeDir
    modelPackage = 'com.fortify.ssc.restclient.model'
    generateModelDocumentation = true
    generateModelTests = false
    generateApiDocumentation = false
    generateApiTests = false
    configOptions = [
        dateLibrary: "java8",
        library: "okhttp-gson",
        hideGenerationTimestamp: "true"
    ]
}


tasks.named("openApiGenerate").configure {
    dependsOn tasks.fixAndCopySwaggerSpec
}

compileJava.dependsOn tasks.openApiGenerate
sourceSets.main.java.srcDir generatedCodeDir

// codegen creates javadoc with tags which are unsupported
// in HTML 5. We disable doclint to avoid build procedure failure
tasks.withType(Javadoc) {
    options.addStringOption('Xdoclint:none', '-quiet')
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            pom {
                groupId = project.group
                artifactId = project.name
                name = project.name
                version = project.version
                description = project.description
                url = 'https://github.com/fortify/ssc-restapi-client'
                licenses {
                    license {
                        name = 'MIT License'
                        url = 'https://opensource.org/licenses/MIT'
                    }
                }
                developers {
                    developer {
                        id = 'fortify'
                        name = 'Fortify'
                        email = 'fortify-oss@fortify.com'
                        organization = 'Micro Focus Fortify'
                        organizationUrl = 'https://www.microfocus.com/en-us/cyberres/application-security'
                    }
                }
                scm {
                    connection = "scm:git:https://github.com/fortify/${rootProject.name}.git"
                    developerConnection = "scm:git:https://github.com/fortify/${rootProject.name}.git"
                    url = "https://github.com/fortify/${rootProject.name}"
                }
            }
            from components.java
            artifact sourcesJar
            artifact javadocJar
        }
    }
}

// Sign using signingKey and signingPassword properties
signing {
    def signingKey = findProperty("signingKey")
    def signingPassword = findProperty("signingPassword")
    useInMemoryPgpKeys(signingKey, signingPassword)
    required { gradle.taskGraph.hasTask("publishToOSSRH") }
    sign publishing.publications.mavenJava
}

// Publish using OSSRHUsername and OSSRHPassword properties
nexusPublishing {
    repositories {
        OSSRH {
            nexusUrl.set(uri("https://s01.oss.sonatype.org/service/local/"))
            snapshotRepositoryUrl.set(uri("https://s01.oss.sonatype.org/content/repositories/snapshots/"))
        }
    }
}

